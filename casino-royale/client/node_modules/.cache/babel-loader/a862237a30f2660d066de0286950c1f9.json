{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\klee5\\\\Desktop\\\\Project 3\\\\casino-royale\\\\client\\\\src\\\\pages\\\\BookSearch\\\\BookSearch.js\";\nimport React, { Component } from \"react\";\nimport Book from '../../components/Book/Book';\nimport axios from 'axios';\n\nvar BookSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookSearch, _Component);\n\n  function BookSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searchTerm: '',\n      // 6.5: don't forget to add books to your state\n      books: [] // 1: stop the form from submitting\n\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault(); // 1.5: I want to submit a search query, but I don't have access to the input field\n      // 4: submit search\n\n      axios // 4.5: use hard-coded search\n      // .get('https://www.googleapis.com/books/v1/volumes?q=quilting')\n      // 5: add in text field data\n      .get('https://www.googleapis.com/books/v1/volumes?q=' + _this.state.searchTerm).then(function (result) {\n        console.log(result.data.items); // 6: save results to state\n\n        _this.setState({\n          books: result.data.items\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      // extract name and value\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // update app state\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(BookSearch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"search-form\",\n        name: \"searchForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"searchTerm\",\n        placeholder: \"Type here, click button, get search results\" // 2.5: attach searchTerm state value to input box\n        ,\n        value: this.state.searchTerm // 3.5: attach change handler to input box\n        ,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Search!\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      },\n      /* Now that we have the search results, let's display them */\n\n      /* 7: Display book info */\n      this.state.books.map(function (bookData) {\n        return (// 8: extract a new component\n          React.createElement(Book, {\n            bookToDisplay: bookData.volumeInfo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }) //^            ^          ^\n          //component    propName   data for display\n\n        );\n      })));\n    }\n  }]);\n\n  return BookSearch;\n}(Component);\n\nexport default BookSearch;","map":{"version":3,"sources":["C:\\Users\\klee5\\Desktop\\Project 3\\casino-royale\\client\\src\\pages\\BookSearch\\BookSearch.js"],"names":["React","Component","Book","axios","BookSearch","state","searchTerm","books","handleSubmit","event","preventDefault","get","then","result","console","log","data","items","setState","handleChange","target","name","value","map","bookData","volumeInfo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,U;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,EADN;AAEN;AACAC,MAAAA,KAAK,EAAE,EAHD,CAMR;;AANQ,K;;UAORC,Y,GAAe,UAACC,KAAD,EAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAGxB;AAEA;;AACAP,MAAAA,KAAK,CACH;AACA;AAEA;AAJG,OAKFQ,GALH,CAKO,mDAAmD,MAAKN,KAAL,CAAWC,UALrE,EAMGM,IANH,CAMQ,UAACC,MAAD,EAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYC,KAAxB,EADgB,CAEhB;;AACA,cAAKC,QAAL,CAAc;AAAEX,UAAAA,KAAK,EAAEM,MAAM,CAACG,IAAP,CAAYC;AAArB,SAAd;AACD,OAVH;AAWD,K;;UAGDE,Y,GAAe,UAACV,KAAD,EAAW;AACxB;AADwB,0BAEAA,KAAK,CAACW,MAFN;AAAA,UAEhBC,IAFgB,iBAEhBA,IAFgB;AAAA,UAEVC,KAFU,iBAEVA,KAFU,EAIxB;;AACA,YAAKJ,QAAL,qBAAiBG,IAAjB,EAAwBC,KAAxB;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,QAAQ,EAAE,KAAKd,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,EAAE,EAAC,aAAT;AAAuB,QAAA,IAAI,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,WAAW,EAAC,6CAHd,CAIE;AAJF;AAKE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,UALpB,CAME;AANF;AAOE,QAAA,QAAQ,EAAE,KAAKa,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAZF,CADF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;;AACA;AACA,WAAKd,KAAL,CAAWE,KAAX,CAAiBgB,GAAjB,CAAqB,UAACC,QAAD;AAAA,eACnB;AACA,8BAAC,IAAD;AAAM,YAAA,aAAa,EAAEA,QAAQ,CAACC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFmB,CAGnB;AACA;;AAJmB;AAAA,OAArB,CAJJ,CAjBF,CADF;AAgCD;;;;EAvEsBxB,S;;AA0EzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Book from '../../components/Book/Book';\n\nimport axios from 'axios';\n\nclass BookSearch extends Component {\n\n  // 2: set up state for searchTerm input box\n  state = {\n    searchTerm: '',\n    // 6.5: don't forget to add books to your state\n    books: []\n  }\n\n  // 1: stop the form from submitting\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    // 1.5: I want to submit a search query, but I don't have access to the input field\n\n    // 4: submit search\n    axios\n      // 4.5: use hard-coded search\n      // .get('https://www.googleapis.com/books/v1/volumes?q=quilting')\n\n      // 5: add in text field data\n      .get('https://www.googleapis.com/books/v1/volumes?q=' + this.state.searchTerm)\n      .then((result) => {\n        console.log(result.data.items);\n        // 6: save results to state\n        this.setState({ books: result.data.items });\n      });\n  }\n\n  // 3: Update state when searchTerm box is typed into\n  handleChange = (event) => {\n    // extract name and value\n    const { name, value } = event.target;\n\n    // update app state\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <div className=\"container\" onSubmit={this.handleSubmit}>\n        <form id=\"search-form\" name=\"searchForm\">\n          <section>\n            <input\n              type=\"text\"\n              name=\"searchTerm\"\n              placeholder=\"Type here, click button, get search results\"\n              // 2.5: attach searchTerm state value to input box\n              value={this.state.searchTerm}\n              // 3.5: attach change handler to input box\n              onChange={this.handleChange}\n            />\n          </section>\n          <section>\n            <button>Search!</button>\n          </section>\n        </form>\n        <div>\n          {\n            /* Now that we have the search results, let's display them */\n            /* 7: Display book info */\n            this.state.books.map((bookData) => (\n              // 8: extract a new component\n              <Book bookToDisplay={bookData.volumeInfo} />\n              //^            ^          ^\n              //component    propName   data for display\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookSearch;\n"]},"metadata":{},"sourceType":"module"}